---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

let articles = [];
try {
  articles = await getCollection('learning-center');
} catch (error) {
  console.error('Error loading learning-center content:', error);
}

const sortedArticles = articles.sort((a, b) => {
  // First sort by step number if it exists
  if (a.data.step && b.data.step) {
    return a.data.step - b.data.step;
  }
  // Then by date
  return b.data.publishedDate.getTime() - a.data.publishedDate.getTime();
});

const categories = [...new Set(articles.map(article => article.data.category))];
---

<BaseLayout title="Learning Center">
  <!-- Hero Section -->
  <section class="bg-gradient-to-br from-monica-navy/10 via-monica-teal/5 to-monica-sage/10 py-12">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-4xl md:text-6xl font-serif font-bold mb-4">
          <span class="text-monica-dark">Tools to Help You Move</span>
          <span class="text-monica-teal block">Forward with Confidence</span>
        </h1>
        <p class="text-xl text-monica-light max-w-3xl mx-auto mb-8">
          Here you'll find supportive resources, ideas, and guidance to help you break through self-doubt, 
          clarify your next steps, and feel good doing it. All book resources are listed under Doubtful to Decisive.
        </p>
        
        <!-- Search Bar -->
        <div class="max-w-xl mx-auto">
          <div class="relative">
            <input 
              type="text" 
              id="searchInput"
              placeholder="Search articles, topics, or keywords..."
              class="w-full px-4 py-3 rounded-lg shadow-lg pl-12 pr-4 text-base focus:outline-none focus:ring-2 focus:ring-monica-teal"
              data-cms="learning-search-placeholder"
            >
            <svg class="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Filter Bar -->
  <section class="bg-white border-b">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <div class="flex flex-wrap items-center gap-2">
        <span class="text-monica-dark font-semibold">Filter by:</span>
        <button class="filter-btn active" data-filter="all">
          All Articles
        </button>
        {categories.map(category => (
          <button class="filter-btn" data-filter={category}>
            {category}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- Articles Grid -->
  <section class="py-12 bg-gray-50">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Debug: Check if articles loaded -->
      {articles.length === 0 && (
        <div class="bg-yellow-50 border border-yellow-200 p-4 mb-6 rounded-lg">
          <p class="text-yellow-800">No articles found. Articles length: {articles.length}</p>
        </div>
      )}
      
      <!-- 8-Step Framework Section -->
      {sortedArticles.filter(article => article.data.step).length > 0 && (
      <div class="mb-12">
        <h2 class="text-3xl font-serif font-bold text-monica-dark mb-6 text-center">
          The 8-Step Framework
        </h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {sortedArticles.filter(article => article.data.step).map(article => (
            <article 
              class="article-card bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
              data-category={article.data.category}
              data-title={article.data.title.toLowerCase()}
            >
              <div class="p-6">
                <!-- Step Number Badge -->
                <div class="inline-block bg-gradient-to-r from-monica-teal to-monica-sage text-white text-sm font-bold px-3 py-1 rounded-full mb-3">
                  Step {article.data.step}
                </div>
                
                <h3 class="text-xl font-serif font-bold text-monica-dark mb-3 line-clamp-2">
                  {article.data.title}
                </h3>
                
                <p class="text-monica-light mb-4 line-clamp-3">
                  {article.data.description}
                </p>
                
                <div class="flex items-center justify-between">
                  <span class="text-sm text-gray-500">
                    {article.data.readTime} min read
                  </span>
                  <a 
                    href={`/learning-center/${article.slug}`} 
                    class="text-monica-teal font-semibold hover:text-teal-700 flex items-center"
                  >
                    Read More 
                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
      )}

      <!-- Other Articles -->
      {sortedArticles.filter(article => !article.data.step).length > 0 && (
      <div>
        <h2 class="text-3xl font-serif font-bold text-monica-dark mb-8 text-center">
          Additional Resources
        </h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {sortedArticles.filter(article => !article.data.step).map(article => (
            <article 
              class="article-card bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
              data-category={article.data.category}
              data-title={article.data.title.toLowerCase()}
            >
              <div class="p-6">
                <div class="inline-block bg-monica-navy/10 text-monica-navy text-xs font-semibold px-3 py-1 rounded-full mb-3">
                  {article.data.category}
                </div>
                
                <h3 class="text-xl font-serif font-bold text-monica-dark mb-3 line-clamp-2">
                  {article.data.title}
                </h3>
                
                <p class="text-monica-light mb-4 line-clamp-3">
                  {article.data.description}
                </p>
                
                <div class="flex items-center justify-between">
                  <span class="text-sm text-gray-500">
                    {article.data.readTime} min read
                  </span>
                  <a 
                    href={`/learning-center/${article.slug}`} 
                    class="text-monica-blue font-semibold hover:text-blue-700 flex items-center"
                  >
                    Read More 
                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
      )}

      <!-- No Results Message -->
      <div id="noResults" class="hidden text-center py-12">
        <p class="text-xl text-monica-light">No articles found. Try adjusting your search or filters.</p>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .filter-btn {
    @apply px-4 py-2 rounded-lg font-medium transition-all duration-300;
    @apply bg-white text-monica-dark border border-gray-300;
    @apply hover:bg-monica-teal hover:text-white hover:border-monica-teal;
  }
  
  .filter-btn.active {
    @apply bg-monica-teal text-white border-monica-teal;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  // Search functionality
  const searchInput = document.getElementById('searchInput') as HTMLInputElement;
  const articleCards = document.querySelectorAll('.article-card');
  const noResults = document.getElementById('noResults');
  
  searchInput?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();
    let hasResults = false;
    
    articleCards.forEach(card => {
      const title = card.getAttribute('data-title') || '';
      const element = card as HTMLElement;
      
      if (title.includes(searchTerm)) {
        element.style.display = 'block';
        hasResults = true;
      } else {
        element.style.display = 'none';
      }
    });
    
    if (noResults) {
      noResults.style.display = hasResults ? 'none' : 'block';
    }
  });

  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  
  filterButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      // Update active state
      filterButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      
      const filter = btn.getAttribute('data-filter');
      let hasResults = false;
      
      articleCards.forEach(card => {
        const category = card.getAttribute('data-category');
        const element = card as HTMLElement;
        
        if (filter === 'all' || category === filter) {
          element.style.display = 'block';
          hasResults = true;
        } else {
          element.style.display = 'none';
        }
      });
      
      if (noResults) {
        noResults.style.display = hasResults ? 'none' : 'block';
      }
    });
  });
</script>